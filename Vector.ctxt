#BlueJ class context
comment0.target=Vector
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Vector\ here.\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=
comment1.target=Vector()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Vector\r\n
comment10.params=in
comment10.target=void\ setY(double)
comment11.params=in
comment11.target=void\ setZ(double)
comment12.params=in
comment12.target=void\ addX(double)
comment13.params=in
comment13.target=void\ addY(double)
comment14.params=in
comment14.target=void\ addZ(double)
comment15.params=in
comment15.target=void\ multiplyX(double)
comment16.params=in
comment16.target=void\ multiplyY(double)
comment17.params=in
comment17.target=void\ multiplyZ(double)
comment18.params=
comment18.target=double[]\ toArray()
comment19.params=
comment19.target=java.lang.String\ toString()
comment2.params=values
comment2.target=Vector(double[])
comment20.params=
comment20.target=Vector\ getNegative()
comment21.params=
comment21.target=Vector\ getAbs()
comment22.params=other
comment22.target=Vector\ getSum(Vector)
comment23.params=other
comment23.target=Vector\ getProduct(double)
comment24.params=other
comment24.target=Vector\ getQuotient(double)
comment25.params=other
comment25.target=Vector\ getDifference(Vector)
comment26.params=other
comment26.target=double\ distanceTo(Vector)
comment27.params=
comment27.target=double\ getMagnitude()
comment28.params=
comment28.target=Vector\ getUnitVector()
comment29.params=other
comment29.target=double\ dotProduct(Vector)
comment3.params=x\ y\ z
comment3.target=Vector(double,\ double,\ double)
comment30.params=other
comment30.target=Vector\ crossProduct(Vector)
comment31.params=other
comment31.target=void\ addVector(Vector)
comment32.params=other
comment32.target=void\ add(Vector)
comment33.params=x\ y\ z
comment33.target=void\ addVector(double,\ double,\ double)
comment34.params=other
comment34.target=void\ subtractVector(Vector)
comment35.params=other
comment35.target=void\ multiplyScalar(double)
comment36.params=other
comment36.target=void\ divideScalar(double)
comment37.params=other
comment37.target=boolean\ equals(Vector)
comment4.params=x\ y
comment4.target=Vector(double,\ double)
comment5.params=x
comment5.target=Vector(double)
comment6.params=
comment6.target=double\ getX()
comment7.params=
comment7.target=double\ getY()
comment8.params=
comment8.target=double\ getZ()
comment9.params=in
comment9.target=void\ setX(double)
numComments=38
